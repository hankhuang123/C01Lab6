{"ast":null,"code":"var _jsxFileName = \"/Users/huangweixiang/Downloads/c01w24lab6/quirknotes/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Dialog from \"./Dialog\";\nimport Note from \"./Note\";\nimport NoteSearch from \"./NoteSearch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // -- Backend-related state --\n  const [loading, setLoading] = useState(true);\n  const [notes, setNotes] = useState(undefined);\n\n  // -- Dialog props-- \n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [dialogNote, setDialogNote] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // -- Database interaction functions --\n  useEffect(() => {\n    const getNotes = async () => {\n      try {\n        await fetch(\"http://localhost:4000/getAllNotes\").then(async response => {\n          if (!response.ok) {\n            console.log(\"Served failed:\", response.status);\n          } else {\n            await response.json().then(data => {\n              getNoteState(data.response);\n            });\n          }\n        });\n      } catch (error) {\n        console.log(\"Fetch function failed:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getNotes();\n  }, []);\n  const deleteNote = async entry => {\n    deleteNoteState(entry._id);\n    try {\n      const response = await fetch(`http://localhost:4000/deleteNote/${entry._id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        console.log(\"Server failed to delete the note:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Delete function failed:\", error);\n    }\n  };\n  const deleteAllNotes = async () => {\n    try {\n      await fetch(`http://localhost:4000/deleteAllNotes`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(async response => {\n        if (!response.ok) {\n          console.log(\"Served failed:\", response.status);\n          alert(\"Failed to delete all notes!\");\n        } else {\n          await response.json().then(() => {\n            deleteAllNotesState();\n          });\n        }\n      });\n    } catch (error) {\n      console.log(\"Delete function failed:\", error);\n      alert(\"Failed to delete all notes!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // -- Dialog functions --\n  const editNote = entry => {\n    setDialogNote(entry);\n    setDialogOpen(true);\n  };\n  const postNote = () => {\n    setDialogNote(null);\n    setDialogOpen(true);\n  };\n  const closeDialog = () => {\n    setDialogNote(null);\n    setDialogOpen(false);\n  };\n\n  // -- State modification functions -- \n  const getNoteState = data => {\n    setNotes(data);\n  };\n  const postNoteState = (_id, title, content) => {\n    setNotes(prevNotes => [...prevNotes, {\n      _id,\n      title,\n      content\n    }]);\n  };\n  const deleteNoteState = _id => {\n    setNotes(prevNotes => prevNotes.filter(note => note._id !== _id));\n  };\n  const deleteAllNotesState = () => {\n    setNotes([]);\n  };\n  const patchNoteState = (_id, title, content) => {\n    setNotes(prevNotes => prevNotes.map(note => {\n      if (note._id !== _id) {\n        return note;\n      }\n      return {\n        _id,\n        title,\n        content\n      };\n    }));\n  };\n  const onChangeColor = async (noteId, color) => {\n    try {\n      const response = await fetch(`http://localhost:4000/updateNoteColor/${noteId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          color\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update note color');\n      }\n      setNotes(prevNotes => prevNotes.map(note => note._id === noteId ? {\n        ...note,\n        color: color\n      } : note));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const filteredNotes = searchQuery ? notes.filter(note => note.title.toLowerCase().includes(searchQuery.toLowerCase())) : notes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: dialogOpen ? AppStyle.dimBackground : {},\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: AppStyle.title,\n          children: \"QuirkNotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: AppStyle.text,\n          children: \"The best note-taking app ever \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NoteSearch, {\n          searchQuery: searchQuery,\n          setSearchQuery: setSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: AppStyle.notesSection,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Loading...\"\n          }, void 0, false) : filteredNotes ? filteredNotes.map(entry => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Note, {\n                entry: entry,\n                editNote: editNote,\n                deleteNote: deleteNote,\n                onChangeColor: onChangeColor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, entry._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: AppStyle.notesError,\n            children: \"Something has gone horribly wrong! We can't get the notes!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: postNote,\n          children: \"Post Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), notes && notes.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteAllNotes,\n          children: \"Delete All Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: dialogOpen,\n        initialNote: dialogNote,\n        closeDialog: closeDialog,\n        postNote: postNoteState,\n        patchNote: patchNoteState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oLF4QVA9OQkg3FLLITllnquzh/M=\");\n_c = App;\nexport default App;\nconst AppStyle = {\n  dimBackground: {\n    opacity: \"20%\",\n    pointerEvents: \"none\"\n  },\n  notesSection: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: \"center\"\n  },\n  notesError: {\n    color: \"red\"\n  },\n  title: {\n    margin: \"0px\"\n  },\n  text: {\n    margin: \"0px\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","Note","NoteSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","loading","setLoading","notes","setNotes","undefined","dialogOpen","setDialogOpen","dialogNote","setDialogNote","searchQuery","setSearchQuery","getNotes","fetch","then","response","ok","console","log","status","json","data","getNoteState","error","deleteNote","entry","deleteNoteState","_id","method","headers","deleteAllNotes","alert","deleteAllNotesState","editNote","postNote","closeDialog","postNoteState","title","content","prevNotes","filter","note","patchNoteState","map","onChangeColor","noteId","color","body","JSON","stringify","Error","filteredNotes","toLowerCase","includes","className","children","style","AppStyle","dimBackground","fileName","_jsxFileName","lineNumber","columnNumber","text","notesSection","notesError","onClick","length","open","initialNote","patchNote","_c","opacity","pointerEvents","display","flexWrap","justifyContent","margin","$RefreshReg$"],"sources":["/Users/huangweixiang/Downloads/c01w24lab6/quirknotes/frontend/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport './App.css';\nimport Dialog from \"./Dialog\";\nimport Note from \"./Note\";\nimport NoteSearch from \"./NoteSearch\";\n\nfunction App() {\n\n  // -- Backend-related state --\n  const [loading, setLoading] = useState(true)\n  const [notes, setNotes] = useState(undefined)\n\n  // -- Dialog props-- \n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [dialogNote, setDialogNote] = useState(null)\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  \n  // -- Database interaction functions --\n  useEffect(() => {\n    const getNotes = async () => {\n      try {\n        await fetch(\"http://localhost:4000/getAllNotes\")\n        .then(async (response) => {\n          if (!response.ok) {\n            console.log(\"Served failed:\", response.status)\n          } else {\n              await response.json().then((data) => {\n              getNoteState(data.response)\n          }) \n          }\n        })\n      } catch (error) {\n        console.log(\"Fetch function failed:\", error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    getNotes()\n  }, [])\n\n  const deleteNote = async (entry) => {\n    deleteNoteState(entry._id);\n\n    try {\n      const response = await fetch(`http://localhost:4000/deleteNote/${entry._id}`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n      });\n  \n      if (!response.ok) {\n        console.log(\"Server failed to delete the note:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Delete function failed:\", error);\n    }\n  }\n\n  const deleteAllNotes = async () => {\n    try {\n      await fetch(`http://localhost:4000/deleteAllNotes`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n      })\n      .then(async (response) => {\n        if (!response.ok) {\n          console.log(\"Served failed:\", response.status)\n          alert(\"Failed to delete all notes!\")\n        } else {\n            await response.json().then(() => {\n              deleteAllNotesState()\n        }) \n        }\n      })\n    } catch (error) {\n      console.log(\"Delete function failed:\", error)\n      alert(\"Failed to delete all notes!\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  \n  // -- Dialog functions --\n  const editNote = (entry) => {\n    setDialogNote(entry)\n    setDialogOpen(true)\n  }\n\n  const postNote = () => {\n    setDialogNote(null)\n    setDialogOpen(true)\n  }\n\n  const closeDialog = () => {\n    setDialogNote(null)\n    setDialogOpen(false)\n  }\n\n  // -- State modification functions -- \n  const getNoteState = (data) => {\n    setNotes(data)\n  }\n\n  const postNoteState = (_id, title, content) => {\n    setNotes((prevNotes) => [...prevNotes, {_id, title, content}])\n  }\n\n  const deleteNoteState = (_id) => {\n    setNotes((prevNotes) => prevNotes.filter((note) => note._id !== _id))\n  }\n\n  const deleteAllNotesState = () => {\n    setNotes([])\n  }\n\n  const patchNoteState = (_id, title, content) => {\n    setNotes((prevNotes) => prevNotes.map((note) => {\n      if (note._id !== _id) {\n        return note\n      }\n\n      return (\n        {_id, title, content}\n      )\n    }))\n  }\n\n  const onChangeColor = async (noteId, color) => {\n    try {\n      const response = await fetch(`http://localhost:4000/updateNoteColor/${noteId}`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ color }),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to update note color');\n      }\n  \n      setNotes((prevNotes) =>\n        prevNotes.map((note) =>\n          note._id === noteId ? { ...note, color: color } : note\n        )\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  const filteredNotes = searchQuery\n  ? notes.filter(note =>\n      note.title.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  : notes;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={dialogOpen ? AppStyle.dimBackground : {}}>\n          <h1 style={AppStyle.title}>QuirkNotes</h1>\n          <h4 style={AppStyle.text}>The best note-taking app ever </h4>\n\n          <NoteSearch searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\n\n          <div style={AppStyle.notesSection}>\n            {loading ?\n            <>Loading...</>\n            : \n            filteredNotes ?\n            filteredNotes.map((entry) => {\n              return (\n              <div key={entry._id}>\n                <Note\n                entry={entry} \n                editNote={editNote} \n                deleteNote={deleteNote}\n                onChangeColor={onChangeColor}\n                />\n              </div>\n              )\n            })\n            :\n            <div style={AppStyle.notesError}>\n              Something has gone horribly wrong!\n              We can't get the notes!\n            </div>\n            }\n          </div>\n\n          <button onClick={postNote}>Post Note</button>\n          {notes && notes.length > 0 && \n          <button\n              onClick={deleteAllNotes}\n              >\n              Delete All Notes\n          </button>}\n\n        </div>\n\n        <Dialog\n          open={dialogOpen}\n          initialNote={dialogNote}\n          closeDialog={closeDialog}\n          postNote={postNoteState}\n          patchNote={patchNoteState}\n          />\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppStyle = {\n  dimBackground: {\n    opacity: \"20%\", \n    pointerEvents: \"none\"\n  },\n  notesSection: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: \"center\"\n  },\n  notesError: {color: \"red\"},\n  title: {\n    margin: \"0px\"\n  }, \n  text: {\n    margin: \"0px\"\n  }\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACe,SAAS,CAAC;;EAE7C;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMqB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,KAAK,CAAC,mCAAmC,CAAC,CAC/CC,IAAI,CAAC,MAAOC,QAAQ,IAAK;UACxB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,MAAM,CAAC;UAChD,CAAC,MAAM;YACH,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACN,IAAI,CAAEO,IAAI,IAAK;cACrCC,YAAY,CAACD,IAAI,CAACN,QAAQ,CAAC;YAC/B,CAAC,CAAC;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdN,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEK,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRrB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDU,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClCC,eAAe,CAACD,KAAK,CAACE,GAAG,CAAC;IAE1B,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMF,KAAK,CAAE,oCAAmCY,KAAK,CAACE,GAAI,EAAC,EAAE;QAC5EC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACF,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACC,EAAE,EAAE;QAChBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,QAAQ,CAACI,MAAM,CAAC;MACnE;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMjB,KAAK,CAAE,sCAAqC,EAAE;QAClDe,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACF,CAAC,CAAC,CACDf,IAAI,CAAC,MAAOC,QAAQ,IAAK;QACxB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,MAAM,CAAC;UAC9CY,KAAK,CAAC,6BAA6B,CAAC;QACtC,CAAC,MAAM;UACH,MAAMhB,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACN,IAAI,CAAC,MAAM;YAC/BkB,mBAAmB,CAAC,CAAC;UAC3B,CAAC,CAAC;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,KAAK,CAAC;MAC7CQ,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,SAAS;MACR7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAGD;EACA,MAAM+B,QAAQ,GAAIR,KAAK,IAAK;IAC1BhB,aAAa,CAACgB,KAAK,CAAC;IACpBlB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAM2B,QAAQ,GAAGA,CAAA,KAAM;IACrBzB,aAAa,CAAC,IAAI,CAAC;IACnBF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAM4B,WAAW,GAAGA,CAAA,KAAM;IACxB1B,aAAa,CAAC,IAAI,CAAC;IACnBF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMe,YAAY,GAAID,IAAI,IAAK;IAC7BjB,QAAQ,CAACiB,IAAI,CAAC;EAChB,CAAC;EAED,MAAMe,aAAa,GAAGA,CAACT,GAAG,EAAEU,KAAK,EAAEC,OAAO,KAAK;IAC7ClC,QAAQ,CAAEmC,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;MAACZ,GAAG;MAAEU,KAAK;MAAEC;IAAO,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMZ,eAAe,GAAIC,GAAG,IAAK;IAC/BvB,QAAQ,CAAEmC,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACd,GAAG,KAAKA,GAAG,CAAC,CAAC;EACvE,CAAC;EAED,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChC5B,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMsC,cAAc,GAAGA,CAACf,GAAG,EAAEU,KAAK,EAAEC,OAAO,KAAK;IAC9ClC,QAAQ,CAAEmC,SAAS,IAAKA,SAAS,CAACI,GAAG,CAAEF,IAAI,IAAK;MAC9C,IAAIA,IAAI,CAACd,GAAG,KAAKA,GAAG,EAAE;QACpB,OAAOc,IAAI;MACb;MAEA,OACE;QAACd,GAAG;QAAEU,KAAK;QAAEC;MAAO,CAAC;IAEzB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMM,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;IAC7C,IAAI;MACF,MAAM/B,QAAQ,GAAG,MAAMF,KAAK,CAAE,yCAAwCgC,MAAO,EAAC,EAAE;QAC9EjB,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEH;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAI,CAAC/B,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIkC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA9C,QAAQ,CAAEmC,SAAS,IACjBA,SAAS,CAACI,GAAG,CAAEF,IAAI,IACjBA,IAAI,CAACd,GAAG,KAAKkB,MAAM,GAAG;QAAE,GAAGJ,IAAI;QAAEK,KAAK,EAAEA;MAAM,CAAC,GAAGL,IACpD,CACF,CAAC;IACH,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAGD,MAAM4B,aAAa,GAAGzC,WAAW,GAC/BP,KAAK,CAACqC,MAAM,CAACC,IAAI,IACfA,IAAI,CAACJ,KAAK,CAACe,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3C,WAAW,CAAC0C,WAAW,CAAC,CAAC,CAC7D,CAAC,GACDjD,KAAK;EAEP,oBACEP,OAAA;IAAK0D,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB3D,OAAA;MAAQ0D,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B3D,OAAA;QAAK4D,KAAK,EAAElD,UAAU,GAAGmD,QAAQ,CAACC,aAAa,GAAG,CAAC,CAAE;QAAAH,QAAA,gBACnD3D,OAAA;UAAI4D,KAAK,EAAEC,QAAQ,CAACpB,KAAM;UAAAkB,QAAA,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1ClE,OAAA;UAAI4D,KAAK,EAAEC,QAAQ,CAACM,IAAK;UAAAR,QAAA,EAAC;QAA8B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE7DlE,OAAA,CAACF,UAAU;UAACgB,WAAW,EAAEA,WAAY;UAACC,cAAc,EAAEA;QAAe;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAExElE,OAAA;UAAK4D,KAAK,EAAEC,QAAQ,CAACO,YAAa;UAAAT,QAAA,EAC/BtD,OAAO,gBACRL,OAAA,CAAAE,SAAA;YAAAyD,QAAA,EAAE;UAAU,gBAAE,CAAC,GAEfJ,aAAa,GACbA,aAAa,CAACR,GAAG,CAAElB,KAAK,IAAK;YAC3B,oBACA7B,OAAA;cAAA2D,QAAA,eACE3D,OAAA,CAACH,IAAI;gBACLgC,KAAK,EAAEA,KAAM;gBACbQ,QAAQ,EAAEA,QAAS;gBACnBT,UAAU,EAAEA,UAAW;gBACvBoB,aAAa,EAAEA;cAAc;gBAAAe,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YAAC,GANMrC,KAAK,CAACE,GAAG;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOd,CAAC;UAER,CAAC,CAAC,gBAEFlE,OAAA;YAAK4D,KAAK,EAAEC,QAAQ,CAACQ,UAAW;YAAAV,QAAA,EAAC;UAGjC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eAENlE,OAAA;UAAQsE,OAAO,EAAEhC,QAAS;UAAAqB,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC5C3D,KAAK,IAAIA,KAAK,CAACgE,MAAM,GAAG,CAAC,iBAC1BvE,OAAA;UACIsE,OAAO,EAAEpC,cAAe;UAAAyB,QAAA,EACvB;QAEL;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CAAC,eAENlE,OAAA,CAACJ,MAAM;QACL4E,IAAI,EAAE9D,UAAW;QACjB+D,WAAW,EAAE7D,UAAW;QACxB2B,WAAW,EAAEA,WAAY;QACzBD,QAAQ,EAAEE,aAAc;QACxBkC,SAAS,EAAE5B;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC9D,EAAA,CApNQD,GAAG;AAAAwE,EAAA,GAAHxE,GAAG;AAsNZ,eAAeA,GAAG;AAElB,MAAM0D,QAAQ,GAAG;EACfC,aAAa,EAAE;IACbc,OAAO,EAAE,KAAK;IACdC,aAAa,EAAE;EACjB,CAAC;EACDT,YAAY,EAAE;IACZU,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,MAAM;IAChBC,cAAc,EAAE;EAClB,CAAC;EACDX,UAAU,EAAE;IAACnB,KAAK,EAAE;EAAK,CAAC;EAC1BT,KAAK,EAAE;IACLwC,MAAM,EAAE;EACV,CAAC;EACDd,IAAI,EAAE;IACJc,MAAM,EAAE;EACV;AACF,CAAC;AAAA,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}